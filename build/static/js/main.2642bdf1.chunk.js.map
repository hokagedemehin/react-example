{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"mPAMA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,2KAESC,GAAI,IAAD,OACd,OAAQ,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAAIH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMhF,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAxBTC,IAAMC,WA+BpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAOA,IACFY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QACrBC,WAAY,EAChBC,SAAS,GANK,E,wDASNZ,GAEV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAa,GAE9DT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAGC,KAAKM,MAAMK,QAAU,IAAM,IAEtCX,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KACNS,WAAYH,EAAQM,OAAQF,SAAUX,KAAKM,MAAMK,a,6BAKnDM,GACLjB,KAAKe,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIlB,IAgBJC,EAhBG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SAErCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,wBAAIE,IAAKF,GACP,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAChCC,OAaL,OALEN,EADEE,EACO,UAAYA,EAEZ,iBAAmBpB,KAAKM,MAAMK,QAAU,IAAM,KAKvD,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOG,QAASkB,EAAQlB,QAASL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,OAEpE,yBAAKJ,UAAU,aACb,6BAAMuB,GACN,4BAAKG,S,GAlEIlB,IAAMC,WAsFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEE7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CAAC,IAAD,cACrB6B,EAAM7B,GADe,GAC9B8B,EAD8B,KAC5BC,EAD4B,KAC1BC,EAD0B,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.2642bdf1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import {Container, Row, Col} from 'react-bootstrap';\n\nfunction Square(props) {\n  return(\n    <button className='square' onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  \n  renderSquare(i) {\n    return (<Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />);\n  }\n  // We split the returned element into multiple lines for readability, and added parentheses so that JavaScript doesnâ€™t insert a semicolon after return and break our code.\n\n  render() {\n    \n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super (props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }], stepNumber: 0,\n      xIsNext: true\n    };\n  }\n  handleClick(i){\n    \n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i]=this.state.xIsNext ? 'X' : 'O';\n    // squares[i] = 'X';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]), stepNumber: history.length, xIsNext: !this.state.xIsNext\n    })\n    // this.setState({squares: squares, xIsNext: !this.state.xIsNext});\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\nconst moves = history.map((step, move) => {\n  const desc = move ? 'Go to move #' + move : 'Go to game start';\n  return(\n    <li key={move}>\n      <button onClick={() => this.jumpTo(move)}>\n        {desc}\n      </button>\n    </li>\n  );\n});\n\n    let status;\n    if (winner) {\n      status = 'Winner ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    }\n    \n    return (\n     \n      <div className='game' >\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      \n      \n      </div>\n      \n\n      \n    );\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a,b,c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])  {\n      return squares[a];\n    }\n  }\n  return null\n  \n}"],"sourceRoot":""}